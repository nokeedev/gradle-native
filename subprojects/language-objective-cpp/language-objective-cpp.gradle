plugins {
	id 'nokeebuild.java-gradle-plugin'
	id 'nokeebuild.gradle-plugin-unit-test'
	id 'nokeebuild.gradle-plugin-integration-test'
	id 'nokeebuild.gradle-plugin-functional-test'
	id 'java-test-fixtures'
	id 'maven-publish'
	id 'dev.gradleplugins.documentation.api-reference-module'
	id 'nokeedocs.documentation-module'
}

dependencies {
	testFixturesApi testFixtures(project(':languageNative'))
	testFixturesImplementation 'org.codehaus.groovy:groovy-all:2.5.8'
}

gradlePlugin {
	plugins {
		objectiveCppLanguageBase {
			id = 'dev.nokee.objective-cpp-language-base'
			implementationClass = 'dev.nokee.language.objectivecpp.internal.plugins.ObjectiveCppLanguageBasePlugin'
		}
		objectiveCppLanguage {
			id = 'dev.nokee.objective-cpp-language'
			implementationClass = 'dev.nokee.language.objectivecpp.internal.plugins.ObjectiveCppLanguagePlugin'
		}
	}

	dependencies {
		api project(':languageCpp')
		implementation project(':coreScript')
		implementation project(':coreUtils')
		implementation project(':runtimeNative')
		implementation "com.google.guava:guava:${guavaVersion}"
	}
}

test {
	dependencies {
		implementation project(':languageCpp') // TODO: Maybe?
		implementation project(':runtimeNative')
		implementation project(':platformBase')
		implementation testFixtures(project(':coreModel'))
		implementation testFixtures(project(':coreScript'))
	}
}

integrationTest {
	dependencies {
		implementation project(':platformBase')
		implementation testFixtures(project(':coreScript'))
	}
}

functionalTest {
	dependencies {
		pluginUnderTestMetadata project(':coreModel')
		implementation project(':languageNative')
		implementation project(':runtimeNative')
		implementation 'dev.nokee:templates:latest.integration'
	}
}
