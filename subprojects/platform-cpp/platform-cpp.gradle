plugins {
	id 'nokeebuild.java-gradle-plugin'
	id 'nokeebuild.gradle-plugin-unit-test'
	id 'nokeebuild.gradle-plugin-functional-test'
	id 'nokeebuild.gradle-plugin-performance-test'
	id 'maven-publish'
	id 'dev.gradleplugins.documentation.api-reference-module'
	id 'nokeedocs.documentation-module'
}

gradlePlugin {
	plugins {
		cppApplication {
			id = 'dev.nokee.cpp-application'
			implementationClass = 'dev.nokee.platform.cpp.internal.plugins.CppApplicationPlugin'
		}
		cppLibrary {
			id = 'dev.nokee.cpp-library'
			implementationClass = 'dev.nokee.platform.cpp.internal.plugins.CppLibraryPlugin'
		}
	}

	dependencies {
		api project(':platformNative')
		implementation project(':coreUtils')
		implementation project(':languageCpp')
		implementation "com.google.guava:guava:${guavaVersion}"
		implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
		implementation "commons-io:commons-io:${commonsIoVersion}"
		implementation project(':coreExec')
		implementation project(':runtimeDarwin')
	}
}

test {
	dependencies {
		implementation testFixtures(project(':platformBase'))
		implementation testFixtures(project(':platformNative'))
		implementation testFixtures(project(':coreModel'))
		implementation testFixtures(project(':languageCpp'))
		implementation gradleTestKit(minimumGradleVersion)
	}
}

functionalTest {
	dependencies {
		implementation project(':runtimeNative')
		implementation 'dev.nokee:templates:latest.integration'
		implementation testFixtures(project(':platformNative'))
		implementation testFixtures(project(':languageCpp'))
	}
}

// Check out projects

repositories {
	maven { url = 'https://repo.gradle.org/gradle/libs-releases/' }
}

dependencies {
	performanceTestImplementation gradleRunnerKit()
	performanceTestImplementation('dev.gradleplugins:gradle-runner-kit-impl:0.0.137') {
		because 'we need access to AbstractGradleExecutionProvider until we open up that API in toolbox'
	}
	performanceTestImplementation gradleTestKit("6.9.2")
	performanceTestImplementation 'dev.nokee:templates'
	performanceTestImplementation project(':internalTesting')

	performanceTestRuntimeOnly 'org.gradle:gradle-tooling-api:6.9.2'
	performanceTestImplementation 'org.gradle.profiler:gradle-profiler:0.18.0'
	performanceTestImplementation 'net.sf.jopt-simple:jopt-simple:5.0.4'

	performanceTestImplementation project(':coreExec')
}

configurations.register('performanceTestLocalRepository') {
	canBeResolved = true
	canBeConsumed = false
	attributes {
		attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, 'distributions'))
	}
}
dependencies {
	performanceTestLocalRepository project(':distributionsLocal')
}

tasks.named('performanceTest', Test) { task ->
	task.dependsOn(configurations.performanceTestLocalRepository)
	task.jvmArgumentProviders.add({
		["-Ddev.nokee.performance.localRepository.url=${configurations.performanceTestLocalRepository.singleFile}"] } as CommandLineArgumentProvider)
}
