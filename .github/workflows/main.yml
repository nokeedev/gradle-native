name: CI

on: push

jobs:
    assemble:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   name: Install documentation dependencies
                run: sudo apt-get update && sudo apt-get -y install graphviz asciinema imagemagick gifsicle ffmpeg tree && sudo npm --global install asciicast2gif giflossy --unsafe-perm
            -   name: Build all code
                uses: ./.github/actions/gradle
                with:
                    arguments: assemble --no-daemon -PskipAllAsciinemaTasks
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{secrets.GITHUB_TOKEN}}
    deploy:
        needs: assemble
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   name: Deploy to snapshot
                uses: ./.github/actions/gradle
                with:
                    arguments: publishAllPublicationsToNokeeSnapshotRepository -Dintegration --no-daemon "-PnokeeSnapshotAccessKey=${{ secrets.NOKEE_SNAPSHOT_ACCESS_KEY }}" "-PnokeeSnapshotSecretKey=${{ secrets.NOKEE_SNAPSHOT_SECRET_KEY }}" "-PnokeeSnapshotUrl=${{ secrets.NOKEE_SNAPSHOT_URL }}"
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{secrets.GITHUB_TOKEN}}
    windows:
        needs: assemble
        runs-on: windows-latest
        strategy:
            fail-fast: false
            matrix:
                checkTask: [
                    ':buildAdapterCmake:check',
                    ':coreExec:check',
                    ':coreModel:check',
                    ':coreScript:check',
                    ':coreUtils:check',
                    ':docs:exemplarKit:check',
                    ':gradleApi:check',
                    ':ideBase:check',
                    ':ideVisualStudio:check',
                    ':ideXcode:check',
                    ':internalSmokeTest:check',
                    ':internalTesting:check',
                    ':languageBase:check',
                    ':languageC:check',
                    ':languageCpp:check',
                    ':languageNative:check',
                    ':languageObjectiveC:check',
                    ':languageObjectiveCpp:check',
                    ':languageSwift:check',
                    ':platformBase:check',
                    ':platformC:check',
                    ':platformCpp:check',
                    ':platformObjectiveC:check',
                    ':platformObjectiveCpp:check',
                    ':platformSwift:check',
                    ':platformIos:check',
                    ':platformJni:check',
                    ':platformNative:check',
                    ':publishingCore:check',
                    ':runtimeBase:check',
                    ':runtimeDarwin:check',
                    ':runtimeNative:check',
                    ':runtimeWindows:check',
                    ':testingBase:check',
                    ':testingNative:check',
                    ':testingXctest:check']
        steps:
            -   uses: actions/checkout@v2
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: ${{ matrix.checkTask }} --no-daemon
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{secrets.GITHUB_TOKEN}}

    macos:
        needs: assemble
        runs-on: macos-latest
        strategy:
            fail-fast: false
            matrix:
                checkTask: [
                    ':buildAdapterCmake:check',
                    ':coreExec:check',
                    ':coreModel:check',
                    ':coreScript:check',
                    ':coreUtils:check',
                    ':docs:exemplarKit:check',
                    ':gradleApi:check',
                    ':ideBase:check',
                    ':ideVisualStudio:check',
                    ':ideXcode:check',
                    ':internalSmokeTest:check',
                    ':internalTesting:check',
                    ':languageBase:check',
                    ':languageC:check',
                    ':languageCpp:check',
                    ':languageNative:check',
                    ':languageObjectiveC:check',
                    ':languageObjectiveCpp:check',
                    ':languageSwift:check',
                    ':platformBase:check',
                    ':platformC:check',
                    ':platformCpp:check',
                    ':platformObjectiveC:check',
                    ':platformObjectiveCpp:check',
                    ':platformSwift:check',
                    ':platformIos:check',
                    ':platformJni:check',
                    ':platformNative:check',
                    ':publishingCore:check',
                    ':runtimeBase:check',
                    ':runtimeDarwin:check',
                    ':runtimeNative:check',
                    ':runtimeWindows:check',
                    ':testingBase:check',
                    ':testingNative:check',
                    ':testingXctest:check']
        steps:
            -   uses: actions/checkout@v2
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: ${{ matrix.checkTask }} --no-daemon
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{secrets.GITHUB_TOKEN}}

    linux:
        needs: assemble
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                checkTask: [
                    ':buildAdapterCmake:check',
                    ':coreExec:check',
                    ':coreModel:check',
                    ':coreScript:check',
                    ':coreUtils:check',
                    ':docs:exemplarKit:check',
                    ':gradleApi:check',
                    ':ideBase:check',
                    ':ideVisualStudio:check',
                    ':ideXcode:check',
                    ':internalSmokeTest:check',
                    ':internalTesting:check',
                    ':languageBase:check',
                    ':languageC:check',
                    ':languageCpp:check',
                    ':languageNative:check',
                    ':languageObjectiveC:check',
                    ':languageObjectiveCpp:check',
                    ':languageSwift:check',
                    ':platformBase:check',
                    ':platformC:check',
                    ':platformCpp:check',
                    ':platformObjectiveC:check',
                    ':platformObjectiveCpp:check',
                    ':platformSwift:check',
                    ':platformIos:check',
                    ':platformJni:check',
                    ':platformNative:check',
                    ':publishingCore:check',
                    ':runtimeBase:check',
                    ':runtimeDarwin:check',
                    ':runtimeNative:check',
                    ':runtimeWindows:check',
                    ':testingBase:check',
                    ':testingNative:check',
                    ':testingXctest:check']
        steps:
            -   uses: actions/checkout@v2
            -   name: Install gcc dependencies
                run: sudo apt-get update && sudo apt-get -y install gobjc-8-multilib gobjc++-8-multilib gcc-8-multilib g++-8-multilib gobjc-9-multilib gobjc++-9-multilib gcc-9-multilib g++-9-multilib libpthread-stubs0-dev
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: ${{ matrix.checkTask }} --no-daemon
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{secrets.GITHUB_TOKEN}}
    check-baked-documentation:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   name: (linux) Install documentation dependencies
                run: sudo apt-get update && sudo apt-get -y install graphviz asciinema imagemagick gifsicle ffmpeg tree && sudo npm --global install asciicast2gif giflossy --unsafe-perm
            -   name: (linux) Install gcc dependencies
                run: sudo apt-get update && sudo apt-get -y install gobjc-8-multilib gobjc++-8-multilib gcc-8-multilib g++-8-multilib gobjc-9-multilib gobjc++-9-multilib gcc-9-multilib g++-9-multilib libpthread-stubs0-dev
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: :docs:bakedDocsTest --no-daemon --no-build-cache -PskipAllAsciinemaTasks
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{secrets.GITHUB_TOKEN}}
    check-documentations:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        steps:
            -   uses: actions/checkout@v2
            -   name: (linux) Install documentation dependencies
                if: matrix.os == 'ubuntu-latest'
                run: sudo apt-get update && sudo apt-get -y install graphviz asciinema imagemagick gifsicle ffmpeg tree && sudo npm --global install asciicast2gif giflossy --unsafe-perm
            -   name: (linux) Install gcc dependencies
                if: matrix.os == 'ubuntu-latest'
                run: sudo apt-get update && sudo apt-get -y install gobjc-8-multilib gobjc++-8-multilib gcc-8-multilib g++-8-multilib gobjc-9-multilib gobjc++-9-multilib gcc-9-multilib g++-9-multilib libpthread-stubs0-dev
            -   name: (macos) Install documentation dependencies
                if: matrix.os == 'macos-latest'
                run: brew install tree
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: :docs:docsTest --no-daemon --no-build-cache -PskipAllAsciinemaTasks
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{secrets.GITHUB_TOKEN}}
    publish-head-milestone:
        if: github.ref == 'refs/heads/master'
        needs: [linux, macos, windows, check-documentations, check-baked-documentation]
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    fetch-depth: '0' # will fetch the entire history for auto-version plugin
            -   name: Install documentation dependencies
                run: sudo apt-get update && sudo apt-get -y install graphviz asciinema imagemagick gifsicle ffmpeg tree && sudo npm --global install asciicast2gif giflossy --unsafe-perm
            -   name: Publish
                uses: ./.github/actions/gradle
                with:
                    arguments: ublishAllPublicationsToNokeeReleaseRepository :docs:publishBakedPublicationToDocsNokeeDevRepository -Dmilestone --continue --no-daemon --no-build-cache -PskipAllAsciinemaTasks "-PdocsNokeeDevAccessKey=${{ secrets.AWS_ACCESS_KEY }}" "-PdocsNokeeDevSecretKey=${{ secrets.AWS_SECRET_KEY }}"
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{secrets.GITHUB_TOKEN}}
