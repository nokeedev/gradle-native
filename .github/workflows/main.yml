name: CI

on: push

jobs:
    sanity-check:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   uses: ./.github/actions/install-documentation-dependencies
            -   name: Build all code
                uses: ./.github/actions/gradle
                with:
                    arguments: sanityCheck --no-daemon
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}
    deploy:
        needs: sanity-check
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   name: Deploy to snapshot
                uses: ./.github/actions/gradle
                with:
                    arguments: publishAllPublicationsToNokeeSnapshotRepository -Dintegration "-PnokeeSnapshotAccessKey=${{ secrets.NOKEE_SNAPSHOT_ACCESS_KEY }}" "-PnokeeSnapshotSecretKey=${{ secrets.NOKEE_SNAPSHOT_SECRET_KEY }}" "-PnokeeSnapshotUrl=${{ secrets.NOKEE_SNAPSHOT_URL }}"
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}
    integration-tests:
        needs: sanity-check
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   uses: ./.github/actions/install-build-dependencies
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: integrationTest
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}

    functional-tests:
        needs: sanity-check
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                checkTask: [
                        'functionalTestMinimumGradle',
                        'functionalTestLatestGlobalAvailable',
                        'functionalTestLatestNightly'
                ]
                os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        steps:
            -   uses: actions/checkout@v2
            -   uses: ./.github/actions/install-build-dependencies
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: ${{ matrix.checkTask }}
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}

    unit-tests:
        needs: sanity-check
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        steps:
            -   uses: actions/checkout@v2
            -   uses: ./.github/actions/install-build-dependencies
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: test
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}
    check-baked-documentation:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   uses: ./.github/actions/install-documentation-dependencies
            -   uses: ./.github/actions/install-build-dependencies
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: :docs:bakedDocsTest --no-build-cache -PskipAllAsciinemaTasks
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}
    check-documentations:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        steps:
            -   uses: actions/checkout@v2
            -   uses: ./.github/actions/install-documentation-dependencies
            -   uses: ./.github/actions/install-build-dependencies
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: :docs:docsTest --no-build-cache -PskipAllAsciinemaTasks
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}
    publish-head-milestone:
        if: github.ref == 'refs/heads/master'
        needs: [unit-tests, integration-tests, functional-tests, check-documentations, check-baked-documentation]
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    fetch-depth: '0' # will fetch the entire history for auto-version plugin
            -   uses: ./.github/actions/install-documentation-dependencies
            -   name: Publish
                uses: ./.github/actions/gradle
                with:
                    arguments: publishAllPublicationsToNokeeReleaseRepository :docs:publishBakedPublicationToDocsNokeeDevRepository -Dmilestone --no-build-cache -PskipAllAsciinemaTasks "-PdocsNokeeDevAccessKey=${{ secrets.AWS_ACCESS_KEY }}" "-PdocsNokeeDevSecretKey=${{ secrets.AWS_SECRET_KEY }}"
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}
