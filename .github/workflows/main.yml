name: CI

on: push

jobs:
    sanity-check:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: true
            -   uses: ./.github/actions/install-documentation-dependencies
            -   name: Build all code
                uses: ./.github/actions/gradle
                with:
                    arguments: sanityCheck --no-daemon
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    build-scan-access-key: ${{ secrets.BUILD_SCAN_ACCESS_KEY }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}
    deploy:
        needs: sanity-check
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: true
            -   name: Deploy to snapshot
                uses: ./.github/actions/gradle
                with:
                    arguments: publishAllPublicationsToNokeeSnapshotRepository -Dintegration "-PnokeeSnapshotAccessKey=${{ secrets.NOKEE_SNAPSHOT_ACCESS_KEY }}" "-PnokeeSnapshotSecretKey=${{ secrets.NOKEE_SNAPSHOT_SECRET_KEY }}" "-PnokeeSnapshotUrl=${{ secrets.NOKEE_SNAPSHOT_URL }}"
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    build-scan-access-key: ${{ secrets.BUILD_SCAN_ACCESS_KEY }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}

    quick-test:
        needs: sanity-check
        if: github.ref != 'refs/heads/master'
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: true
            -   uses: ./.github/actions/install-build-dependencies
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: quickTest
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    build-scan-access-key: ${{ secrets.BUILD_SCAN_ACCESS_KEY }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}
    full-test:
        needs: sanity-check
        if: github.ref == 'refs/heads/master'
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: true
            -   uses: ./.github/actions/install-build-dependencies
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: fullTest
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    build-scan-access-key: ${{ secrets.BUILD_SCAN_ACCESS_KEY }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}

    check-baked-documentation:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: true
            -   uses: ./.github/actions/install-documentation-dependencies
            -   uses: ./.github/actions/install-build-dependencies
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: :docs:bakedDocsTest --no-build-cache -PskipAllAsciinemaTasks
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    build-scan-access-key: ${{ secrets.BUILD_SCAN_ACCESS_KEY }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}
    check-documentations:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: true
            -   uses: ./.github/actions/install-documentation-dependencies
            -   uses: ./.github/actions/install-build-dependencies
            -   name: Run all tests
                uses: ./.github/actions/gradle
                with:
                    arguments: :docs:docsTest --no-build-cache -PskipAllAsciinemaTasks
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    build-scan-access-key: ${{ secrets.BUILD_SCAN_ACCESS_KEY }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}

    check-documentations-freebsd:
        runs-on: macos-10.15
        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: true
            -   uses: nokeedev/actions/setup-vagrant@main
                with:
                    install-vagrant-if: 'false'
                    install-virtualbox-if: 'false'
            -   uses: nokeedev/actions/vagrant-provision@main
                with:
                    mem: 4096
                    name: freebsd-12.3
            -   uses: nokeedev/actions/vagrant-ssh@main
                with:
                    name: freebsd-12.3
                    run: ./gradlew --scan --continue --no-daemon :docs:docsTest --no-build-cache -PskipAllAsciinemaTasks

    publish-head-milestone:
        if: github.ref == 'refs/heads/master'
        needs: [quick-test, full-test, check-documentations, check-baked-documentation]
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: true
                    fetch-depth: '0' # will fetch the entire history for auto-version plugin
            -   uses: ./.github/actions/install-documentation-dependencies
            -   name: Publish
                uses: ./.github/actions/gradle
                with:
                    arguments: publishAllPublicationsToNokeeReleaseRepository :docs:publishBakedPublicationToDocsNokeeDevRepository -Dmilestone --no-build-cache -PskipAllAsciinemaTasks "-PdocsNokeeDevAccessKey=${{ secrets.AWS_ACCESS_KEY }}" "-PdocsNokeeDevSecretKey=${{ secrets.AWS_SECRET_KEY }}"
                    build-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
                    build-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
                    build-scan-access-key: ${{ secrets.BUILD_SCAN_ACCESS_KEY }}
                    github-token: ${{ secrets.GITHUB_TOKEN }}
